// RUN: marco --omc-bypass --model=ArraysWithState --end-time=1 --time-step=0.1 --solver=ida --ida-equidistant-time-grid -o %basename_t %s
// RUN: ./%basename_t --precision=6 | FileCheck %s

// CHECK: "time","x[1]","x[2]","x[3]","y[1]","y[2]","y[3]"
// CHECK-NEXT: 0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000
// CHECK-NEXT: 0.100000,0.100000,0.100000,0.100000,0.305000,0.305000,0.305000
// CHECK-NEXT: 0.200000,0.200000,0.200000,0.200000,0.620000,0.620000,0.620000
// CHECK-NEXT: 0.300000,0.300000,0.300000,0.300000,0.945000,0.945000,0.945000
// CHECK-NEXT: 0.400000,0.400000,0.400000,0.400000,1.280000,1.280000,1.280000
// CHECK-NEXT: 0.500000,0.500000,0.500000,0.500000,1.625000,1.625000,1.625000
// CHECK-NEXT: 0.600000,0.600000,0.600000,0.600000,1.980000,1.980000,1.980000
// CHECK-NEXT: 0.700000,0.700000,0.700000,0.700000,2.345000,2.345000,2.345000
// CHECK-NEXT: 0.800000,0.800000,0.800000,0.800000,2.720000,2.720000,2.720000
// CHECK-NEXT: 0.900000,0.900000,0.900000,0.900000,3.105000,3.105000,3.105000
// CHECK-NEXT: 1.000000,1.000000,1.000000,1.000000,3.500000,3.500000,3.500000

model ArraysWithState
	Real[3] x(each start = 0, fixed = true);
	Real[3] y(each start = 0, fixed = true);
equation
	for i in 1:3 loop
		der(x[i]) = 1.0;
		der(y[i]) = 3 + x[i];
	end for;
end ArraysWithState;
