// RUN: marco --omc-bypass --model=InductionUsage --end-time=1 --time-step=0.1 --solver=ida --ida-equidistant-time-grid -o %basename_t %s
// RUN: ./%basename_t | FileCheck %s

// CHECK: time;x[1];x[2];x[3];y[1];y[2];y[3]
// CHECK-NEXT: 0.000000000000;0.000000000000;0.000000000000;0.000000000000;0.000000000000;0.000000000000;0.000000000000
// CHECK-NEXT: 0.100000000000;0.100000000000;0.100000000000;0.100000000000;0.305000000001;0.305000000001;0.305000000001
// CHECK-NEXT: 0.200000000000;0.200000000000;0.200000000000;0.200000000000;0.620000000001;0.620000000001;0.620000000001
// CHECK-NEXT: 0.300000000000;0.300000000000;0.300000000000;0.300000000000;0.945000000001;0.945000000001;0.945000000001
// CHECK-NEXT: 0.400000000000;0.400000000000;0.400000000000;0.400000000000;1.280000000001;1.280000000001;1.280000000001
// CHECK-NEXT: 0.500000000000;0.500000000000;0.500000000000;0.500000000000;1.625000000001;1.625000000001;1.625000000001
// CHECK-NEXT: 0.600000000000;0.600000000000;0.600000000000;0.600000000000;1.980000000001;1.980000000001;1.980000000001
// CHECK-NEXT: 0.700000000000;0.700000000000;0.700000000000;0.700000000000;2.345000000002;2.345000000002;2.345000000002
// CHECK-NEXT: 0.800000000000;0.800000000000;0.800000000000;0.800000000000;2.720000000002;2.720000000002;2.720000000002
// CHECK-NEXT: 0.900000000000;0.900000000000;0.900000000000;0.900000000000;3.105000000002;3.105000000002;3.105000000002
// CHECK-NEXT: 1.000000000000;1.000000000000;1.000000000000;1.000000000000;3.500000000002;3.500000000002;3.500000000002

model ArraysWithState
	Real[3] x;
	Real[3] y;
equation
	for i in 1:3 loop
		der(x[i]) = 1.0;
		der(y[i]) = 3 + x[i];
	end for;
end ArraysWithState;
